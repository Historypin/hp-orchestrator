<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:context="http://www.springframework.org/schema/context"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<context:property-placeholder location="classpath:configuration.properties"/>
	<http:request-config name="HTTPConnector" host="${techDemonstrator.API.host}" port="${techDemonstrator.API.port}" basePath="${techDemonstrator.API.path}" doc:name="HTTP Request Configuration"/>
    <flow name="transformersFlow">
        <http:listener config-ref="HTTPConnector" path="/transformData" metadata:id="8cf2fa52-d597-4163-b766-a0a002d288a7" doc:name="HTTP"/>
        <message-properties-transformer  doc:name="Message Properties" scope="session">
            <add-message-property key="transformation" value="#[message.inboundProperties.get('http.query.params').get('transformation')]"/>
        </message-properties-transformer>
	        <choice doc:name="Choice">
	            <when expression="#[sessionVars.transformation==&quot;eu.xml2hp.json&quot;]">
                    <byte-array-to-object-transformer mimeType="application/xml" doc:name="Byte Array to Object"/>
			        <dw:transform-message doc:name="EU.xml2hp">
			            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
records : payload.OAI-PMH.ListRecords.*record map {
		pin: {
			caption: $.metadata.RDF.Proxy.title,
			date: $.metadata.RDF.Proxy.date,
			country: $.metadata.RDF.EuropeanaAggregation.country,
			license: $.metadata.RDF.EuropeanaAggregation.rights.@resource,
			preview: $.metadata.RDF.EuropeanaAggregation.preview.@resource,
			landingPage: $.metadata.RDF.EuropeanaAggregation.landingPage.@resource
		},
		remote: {
			id:(($.header.identifier) replace "http://data.europeana.eu/item" with "")
		}
}
]]></dw:set-payload>
			        </dw:transform-message>
	            </when>
	            <when expression="#[sessionVars.transformation==&quot;eu.json2hp.json&quot;]">
                    <byte-array-to-object-transformer mimeType="application/json" doc:name="Byte Array to Object"/>
			        <dw:transform-message doc:name="EU.json2hp">
			            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
records : payload.items map {
		pin: {
			(($.title default []) map caption: $),
			(($.dcDescription default []) map description: $),
			(($.edmIsShownBy default []) map content: $),
			remoteId: $.id,
			link: $.guid
		},
		europeanaFields: {
			type: $.type,
			(($.year default []) map year: $),
			(($.country default []) map country: $),
			(($.rights default []) map rights: $),
			(($.edmPlaceLatitude default []) map edmPlaceLatitude: $),
			(($.edmPlaceLongitude default []) map edmPlaceLongitude: $)
		}
}
]]></dw:set-payload>
			        </dw:transform-message>
	            </when>
            <when expression="#[sessionVars.transformation==&quot;hp.json2mint.json&quot;]">
                <byte-array-to-object-transformer doc:name="hp.json2mint.json"/>
                <scripting:component doc:name="Groovy">
                    <scripting:script engine="Groovy"><![CDATA[return payload.toString().replaceAll("\\s+\\},\\s+\\}","}}");]]></scripting:script>
                </scripting:component>
                <dw:transform-message metadata:id="82bee956-8f2a-4e31-9b78-73082f45fc50" doc:name="HP.json2MINT">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"results": [
		payload
	]
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
	        </choice>
        <object-to-string-transformer doc:name="Object to String"/>
    </flow>
    <flow name="edm2tagApp">
        <vm:inbound-endpoint exchange-pattern="one-way" address="vm://edm2tagApp" doc:name="VM"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
}]]></dw:set-payload>
        </dw:transform-message>
        <vm:outbound-endpoint exchange-pattern="one-way" address="vm://tagApp-in" doc:name="VM"/>
    </flow>
    <flow name="HP2MINT">
        <vm:inbound-endpoint exchange-pattern="one-way" address="vm://HP2MINT" doc:name="VM"/>
        <vm:outbound-endpoint exchange-pattern="one-way" address="vm://mint-in" doc:name="VM"/>
    </flow>
</mule>
